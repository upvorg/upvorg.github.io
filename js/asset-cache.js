var o=(t,c,e)=>new Promise((s,n)=>{var a=r=>{try{u(e.next(r))}catch(h){n(h)}},i=r=>{try{u(e.throw(r))}catch(h){n(h)}},u=r=>r.done?s(r.value):Promise.resolve(r.value).then(a,i);u((e=e.apply(t,c)).next())});const f="asset-cache";export const pause=t=>new Promise(c=>{setTimeout(()=>c(),t)});const E=3e3;export function respondWithCache(t){return o(this,null,function*(){const c=yield l(()=>o(this,null,function*(){const a=yield self.caches.open(f),i=yield a.match(t.request);return{cache:a,cached:i}}),3e3),{cache:e,cached:s}=c||{};if(e&&s){if(s.ok)return s;yield e.delete(t.request)}const n=yield fetch(t.request);return n.ok&&e&&e.put(t.request,n.clone()),n})}function l(t,c){return o(this,null,function*(){try{return yield Promise.race([pause(c).then(()=>Promise.reject(new Error("TIMEOUT"))),t()])}catch(e){console.error(e);return}})}export function clearAssetCache(){return self.caches.delete(f)}
